# microservice specific routes

->         /money                                       money.Routes
->         /property-or-land                            propertyOrLand.Routes
->         /shares                                      shares.Routes
->         /business                                    business.Routes
->         /partnership                                 partnership.Routes
->         /other                                       other.Routes
->         /non-eea-business                            nonEeaBusiness.Routes

GET        /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                              controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /this-service-has-been-reset                 controllers.SessionExpiredController.onPageLoad

GET        /unauthorised                                controllers.UnauthorisedController.onPageLoad

GET        /logout                                      controllers.LogoutController.logout()

GET        /assets-type                                 controllers.asset.WhatKindOfAssetController.onPageLoad(index: Int)
POST       /assets-type                                 controllers.asset.WhatKindOfAssetController.onSubmit(index: Int)

GET        /trust-owns-non-eea-company          controllers.asset.TrustOwnsNonEeaBusinessYesNoController.onPageLoad(mode: Mode = NormalMode)
POST       /trust-owns-non-eea-company          controllers.asset.TrustOwnsNonEeaBusinessYesNoController.onSubmit(mode: Mode = NormalMode)
GET        /change-trust-owns-non-eea-company   controllers.asset.TrustOwnsNonEeaBusinessYesNoController.onPageLoad(mode: Mode = CheckMode)
POST       /change-trust-owns-non-eea-company   controllers.asset.TrustOwnsNonEeaBusinessYesNoController.onSubmit(mode: Mode = CheckMode)

GET        /information-you-need         controllers.asset.AssetInterruptPageController.onPageLoad()
POST       /information-you-need         controllers.asset.AssetInterruptPageController.onSubmit()

GET        /what-kind                                   controllers.asset.AddNowController.onPageLoad()
POST       /what-kind                                   controllers.asset.AddNowController.onSubmit()

GET        /add                          controllers.asset.AddAssetsController.onPageLoad()
POST       /add                          controllers.asset.AddAssetsController.submitOne()
GET        /add-another                  controllers.asset.AddAssetsController.onPageLoad()
POST       /add-another                  controllers.asset.AddAssetsController.submitAnother()
GET        /complete                     controllers.asset.AddAssetsController.onPageLoad()
POST       /complete                     controllers.asset.AddAssetsController.submitComplete()

#GET        /:index/remove                controllers.asset.RemoveAssetYesNoController.onPageLoad(index: Int)
#POST       /:index/remove                controllers.asset.RemoveAssetYesNoController.onSubmit(index: Int)

GET        /feature-not-available                       controllers.FeatureNotAvailableController.onPageLoad()

GET        /keep-alive                                  controllers.SessionTimeoutController.keepAlive

GET        /timeout                                     controllers.SessionTimeoutController.timeout

GET        /:utr                                       controllers.IndexController.onPageLoad(utr: String)
