# microservice specific routes

->         /money                                       money.Routes
->         /property-or-land                            propertyOrLand.Routes
->         /shares                                      shares.Routes
->         /business                                    business.Routes
->         /partnership                                 partnership.Routes
->         /other                                       other.Routes

GET        /:draftId/start                              controllers.IndexController.onPageLoad(draftId: String)

GET        /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                              controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /this-service-has-been-reset                 controllers.SessionExpiredController.onPageLoad

GET        /unauthorised                                controllers.UnauthorisedController.onPageLoad

GET        /logout                                      controllers.LogoutController.logout()

GET        /:draftId/:index/assets-type           controllers.asset.WhatKindOfAssetController.onPageLoad(index: Int, draftId: String)
POST       /:draftId/:index/assets-type           controllers.asset.WhatKindOfAssetController.onSubmit(index: Int, draftId: String)

GET        /:draftId/information-you-need         controllers.asset.AssetInterruptPageController.onPageLoad(draftId: String)
POST       /:draftId/information-you-need         controllers.asset.AssetInterruptPageController.onSubmit(draftId: String)

GET        /:draftId/add                          controllers.asset.AddAssetsController.onPageLoad(draftId: String)
POST       /:draftId/add                          controllers.asset.AddAssetsController.submitOne(draftId: String)
POST       /:draftId/add-another                  controllers.asset.AddAssetsController.submitAnother(draftId: String)
POST       /:draftId/complete                     controllers.asset.AddAssetsController.submitComplete(draftId: String)

GET        /:draftId/:index/remove                controllers.asset.RemoveAssetYesNoController.onPageLoad(index: Int, draftId: String)
POST       /:draftId/:index/remove                controllers.asset.RemoveAssetYesNoController.onSubmit(index: Int, draftId: String)

GET        /feature-not-available                       controllers.FeatureNotAvailableController.onPageLoad()

GET        /keep-alive                                  controllers.SessionTimeoutController.keepAlive

GET        /timeout                                     controllers.SessionTimeoutController.timeout
